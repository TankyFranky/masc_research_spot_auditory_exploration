// Generated by gencpp from file ssl_frontier_selection/CheckCollision.msg
// DO NOT EDIT!


#ifndef SSL_FRONTIER_SELECTION_MESSAGE_CHECKCOLLISION_H
#define SSL_FRONTIER_SELECTION_MESSAGE_CHECKCOLLISION_H

#include <ros/service_traits.h>


#include <ssl_frontier_selection/CheckCollisionRequest.h>
#include <ssl_frontier_selection/CheckCollisionResponse.h>


namespace ssl_frontier_selection
{

struct CheckCollision
{

typedef CheckCollisionRequest Request;
typedef CheckCollisionResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct CheckCollision
} // namespace ssl_frontier_selection


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::ssl_frontier_selection::CheckCollision > {
  static const char* value()
  {
    return "c92144d75546ef11cae2fac438240e38";
  }

  static const char* value(const ::ssl_frontier_selection::CheckCollision&) { return value(); }
};

template<>
struct DataType< ::ssl_frontier_selection::CheckCollision > {
  static const char* value()
  {
    return "ssl_frontier_selection/CheckCollision";
  }

  static const char* value(const ::ssl_frontier_selection::CheckCollision&) { return value(); }
};


// service_traits::MD5Sum< ::ssl_frontier_selection::CheckCollisionRequest> should match
// service_traits::MD5Sum< ::ssl_frontier_selection::CheckCollision >
template<>
struct MD5Sum< ::ssl_frontier_selection::CheckCollisionRequest>
{
  static const char* value()
  {
    return MD5Sum< ::ssl_frontier_selection::CheckCollision >::value();
  }
  static const char* value(const ::ssl_frontier_selection::CheckCollisionRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::ssl_frontier_selection::CheckCollisionRequest> should match
// service_traits::DataType< ::ssl_frontier_selection::CheckCollision >
template<>
struct DataType< ::ssl_frontier_selection::CheckCollisionRequest>
{
  static const char* value()
  {
    return DataType< ::ssl_frontier_selection::CheckCollision >::value();
  }
  static const char* value(const ::ssl_frontier_selection::CheckCollisionRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::ssl_frontier_selection::CheckCollisionResponse> should match
// service_traits::MD5Sum< ::ssl_frontier_selection::CheckCollision >
template<>
struct MD5Sum< ::ssl_frontier_selection::CheckCollisionResponse>
{
  static const char* value()
  {
    return MD5Sum< ::ssl_frontier_selection::CheckCollision >::value();
  }
  static const char* value(const ::ssl_frontier_selection::CheckCollisionResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::ssl_frontier_selection::CheckCollisionResponse> should match
// service_traits::DataType< ::ssl_frontier_selection::CheckCollision >
template<>
struct DataType< ::ssl_frontier_selection::CheckCollisionResponse>
{
  static const char* value()
  {
    return DataType< ::ssl_frontier_selection::CheckCollision >::value();
  }
  static const char* value(const ::ssl_frontier_selection::CheckCollisionResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // SSL_FRONTIER_SELECTION_MESSAGE_CHECKCOLLISION_H
