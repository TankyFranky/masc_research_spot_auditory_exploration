// Generated by gencpp from file ssl_frontier_selection/StampMap.msg
// DO NOT EDIT!


#ifndef SSL_FRONTIER_SELECTION_MESSAGE_STAMPMAP_H
#define SSL_FRONTIER_SELECTION_MESSAGE_STAMPMAP_H

#include <ros/service_traits.h>


#include <ssl_frontier_selection/StampMapRequest.h>
#include <ssl_frontier_selection/StampMapResponse.h>


namespace ssl_frontier_selection
{

struct StampMap
{

typedef StampMapRequest Request;
typedef StampMapResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct StampMap
} // namespace ssl_frontier_selection


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::ssl_frontier_selection::StampMap > {
  static const char* value()
  {
    return "e835b04f93d0b30fd8cb71e0967a16db";
  }

  static const char* value(const ::ssl_frontier_selection::StampMap&) { return value(); }
};

template<>
struct DataType< ::ssl_frontier_selection::StampMap > {
  static const char* value()
  {
    return "ssl_frontier_selection/StampMap";
  }

  static const char* value(const ::ssl_frontier_selection::StampMap&) { return value(); }
};


// service_traits::MD5Sum< ::ssl_frontier_selection::StampMapRequest> should match
// service_traits::MD5Sum< ::ssl_frontier_selection::StampMap >
template<>
struct MD5Sum< ::ssl_frontier_selection::StampMapRequest>
{
  static const char* value()
  {
    return MD5Sum< ::ssl_frontier_selection::StampMap >::value();
  }
  static const char* value(const ::ssl_frontier_selection::StampMapRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::ssl_frontier_selection::StampMapRequest> should match
// service_traits::DataType< ::ssl_frontier_selection::StampMap >
template<>
struct DataType< ::ssl_frontier_selection::StampMapRequest>
{
  static const char* value()
  {
    return DataType< ::ssl_frontier_selection::StampMap >::value();
  }
  static const char* value(const ::ssl_frontier_selection::StampMapRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::ssl_frontier_selection::StampMapResponse> should match
// service_traits::MD5Sum< ::ssl_frontier_selection::StampMap >
template<>
struct MD5Sum< ::ssl_frontier_selection::StampMapResponse>
{
  static const char* value()
  {
    return MD5Sum< ::ssl_frontier_selection::StampMap >::value();
  }
  static const char* value(const ::ssl_frontier_selection::StampMapResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::ssl_frontier_selection::StampMapResponse> should match
// service_traits::DataType< ::ssl_frontier_selection::StampMap >
template<>
struct DataType< ::ssl_frontier_selection::StampMapResponse>
{
  static const char* value()
  {
    return DataType< ::ssl_frontier_selection::StampMap >::value();
  }
  static const char* value(const ::ssl_frontier_selection::StampMapResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // SSL_FRONTIER_SELECTION_MESSAGE_STAMPMAP_H
