// Generated by gencpp from file microstrain_mips/SetComplementaryFilter.msg
// DO NOT EDIT!


#ifndef MICROSTRAIN_MIPS_MESSAGE_SETCOMPLEMENTARYFILTER_H
#define MICROSTRAIN_MIPS_MESSAGE_SETCOMPLEMENTARYFILTER_H

#include <ros/service_traits.h>


#include <microstrain_mips/SetComplementaryFilterRequest.h>
#include <microstrain_mips/SetComplementaryFilterResponse.h>


namespace microstrain_mips
{

struct SetComplementaryFilter
{

typedef SetComplementaryFilterRequest Request;
typedef SetComplementaryFilterResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct SetComplementaryFilter
} // namespace microstrain_mips


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::microstrain_mips::SetComplementaryFilter > {
  static const char* value()
  {
    return "f2496add5126d026ef6c94d30c11db4c";
  }

  static const char* value(const ::microstrain_mips::SetComplementaryFilter&) { return value(); }
};

template<>
struct DataType< ::microstrain_mips::SetComplementaryFilter > {
  static const char* value()
  {
    return "microstrain_mips/SetComplementaryFilter";
  }

  static const char* value(const ::microstrain_mips::SetComplementaryFilter&) { return value(); }
};


// service_traits::MD5Sum< ::microstrain_mips::SetComplementaryFilterRequest> should match
// service_traits::MD5Sum< ::microstrain_mips::SetComplementaryFilter >
template<>
struct MD5Sum< ::microstrain_mips::SetComplementaryFilterRequest>
{
  static const char* value()
  {
    return MD5Sum< ::microstrain_mips::SetComplementaryFilter >::value();
  }
  static const char* value(const ::microstrain_mips::SetComplementaryFilterRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::microstrain_mips::SetComplementaryFilterRequest> should match
// service_traits::DataType< ::microstrain_mips::SetComplementaryFilter >
template<>
struct DataType< ::microstrain_mips::SetComplementaryFilterRequest>
{
  static const char* value()
  {
    return DataType< ::microstrain_mips::SetComplementaryFilter >::value();
  }
  static const char* value(const ::microstrain_mips::SetComplementaryFilterRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::microstrain_mips::SetComplementaryFilterResponse> should match
// service_traits::MD5Sum< ::microstrain_mips::SetComplementaryFilter >
template<>
struct MD5Sum< ::microstrain_mips::SetComplementaryFilterResponse>
{
  static const char* value()
  {
    return MD5Sum< ::microstrain_mips::SetComplementaryFilter >::value();
  }
  static const char* value(const ::microstrain_mips::SetComplementaryFilterResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::microstrain_mips::SetComplementaryFilterResponse> should match
// service_traits::DataType< ::microstrain_mips::SetComplementaryFilter >
template<>
struct DataType< ::microstrain_mips::SetComplementaryFilterResponse>
{
  static const char* value()
  {
    return DataType< ::microstrain_mips::SetComplementaryFilter >::value();
  }
  static const char* value(const ::microstrain_mips::SetComplementaryFilterResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // MICROSTRAIN_MIPS_MESSAGE_SETCOMPLEMENTARYFILTER_H
